name: "ðŸš€ Build and Test"

on: # rebuild any PRs and main & release branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:

# ---------------------------------------------------------------------------------------

  build: # make sure build/ci works properly (action development)

# ---------------------------------------------------------------------------------------

    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4.1.1 # https://github.com/actions/checkout

      - run: |
          npm install

      - run: |
          npm run all

# ---------------------------------------------------------------------------------------

  test: # make sure the action works on a clean machine without building (user case)

# ---------------------------------------------------------------------------------------

    name: Build on ${{ matrix.config.OS }}
    runs-on: ${{ matrix.config.OS }}

    strategy:
      fail-fast: false
      matrix:
        config:
          # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2022-Readme.md
          - { OS: windows-2022 }
          - { OS: ubuntu-22.04 }
          #- { OS: macos-12     } disabled

    steps:

      - name: ðŸ¤˜ Checkout Code
        uses: actions/checkout@v4.1.1 # https://github.com/actions/checkout

      - name: Use own action
        uses: ./
        with:
          # Vulkan SDK version to download. Default: latest version.
          vulkan_version: 1.3.250.1
          # test with intentionally wrong version
          # should say version not available
          # should print list of valid versions
          #vulkan_version: 1.2.3.4
          optional_components: com.lunarg.vulkan.vma, com.lunarg.vulkan.volk
          install_runtime: true
          cache: true
          stripdown: true

      - name: Show Env Vars and SDK folder (Linux)
        if: contains(matrix.config.OS, 'ubuntu')
        run: |
          echo PATH = $PATH
          echo VULKAN_VERSION = $VULKAN_VERSION
          echo VULKAN_SDK = $VULKAN_SDK
          echo VK_LAYER_PATH = $VK_LAYER_PATH
          echo LD_LIBRARY_PATH = $LD_LIBRARY_PATH
          echo Folder size = `du -hs $VULKAN_SDK`

      - name: Show Env Vars and SDK folder (Windows)
        if: contains(matrix.config.OS, 'windows')
        working-directory: ${{env.VULKAN_SDK}}
        run: |
          echo $env:PATH
          echo $env:VULKAN_VERSION
          echo $env:VULKAN_SDK
          Get-ChildItem -File -Recurse
          $folderSizeMB = (Get-ChildItem -File -Recurse | Measure-Object -Property Length -Sum).Sum / 1MB
          "Folder size: {0:N2} MB" -f $folderSizeMB
